pipeline {
  environment {
    registry = "geordin/spring-petclinic"
    registryCredential = 'docker-hub'
    dockerImage = ''
  }
  agent any 
  stages {
    stage('Cloning Git') {
      steps {
        git 'git@github.com:geordin/spring-petclinic.git'
      }
    }
    stage('Compile') {
       steps {
         sh 'mvn compile' //only compilation of the code
       }
    }
    stage('Test') {
      steps {
        sh '''
        mvn clean install
        ls
        pwd
        ''' 
        //if the code is compiled, we test and package it in its distributable format; run IT and store in local repository
      }
    }
    stage('Building Image') {
      steps{
        script {
          dockerImage = docker.build registry + ":1.${BUILD_NUMBER}.0"
        }
      }
    }
    stage('Deploy Image') {
      steps{
         script {
            docker.withRegistry( '', registryCredential ) {
            dockerImage.push()
          }
        }
      }
    }
    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $registry:1.${BUILD_NUMBER}.0"
      }
    }
    stage('Trigger Delivery') {
      steps{
        build job:'deploy' , parameters:[
          string(name: 'Project',value: 'petclinic'),
          string(name: 'Stage',value:'dev'),
          string(name: 'Service',value:'petclinic'),
          string(name: 'Image',value:"docker.io/geordin/spring-petclinic:1.${BUILD_NUMBER}.0"),
          string(name: 'WaitForResult',value:'60')
     ]
      }
    }
  }
}
