@Library('keptn-library@6.0.0')
import sh.keptn.Keptn
def keptn = new sh.keptn.Keptn()

node {
  properties([
        parameters([
         string(defaultValue: 'sockshop', description: 'Name of your Keptn Project', name: 'Project', trim: false), 
         string(defaultValue: 'carts', description: 'Name of the service', name: 'Service', trim: false),
        ])
    ])
	stage('Downloading Templates') {
		
        git 'git@github.com:geordin/keptn-templates.git'
		
      }

	stage('Initialize Keptn Dev Environment') {

        keptn.keptnInit project:"${params.Project}", service:"${params.Service}", stage:"dev", shipyard:'./keptn/shipyard.yaml'
		
        keptn.keptnAddResources('./helm/carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace/dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')
    }

    stage('Initialize Keptn Staging Environment') {

        keptn.keptnInit project:"${params.Project}", service:"${params.Service}", stage:"staging"
	    
        keptn.keptnAddResources('./helm/carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace/dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')
	keptn.keptnAddResources('./jmeter/load.jmx','jmeter/load.jmx')
        keptn.keptnAddResources('./dynatrace/sli.yaml','dynatrace/sli.yaml')
        keptn.keptnAddResources('./keptn/slo.yaml','slo.yaml')
    }

    stage('Initialize Keptn Production Environment') {

        keptn.keptnInit project:"${params.Project}", service:"${params.Service}", stage:"production"

        keptn.keptnAddResources('./helm/carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace/dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')

    }

}
