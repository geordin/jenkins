@Library('keptn-library@6.0.0')
import sh.keptn.Keptn
def keptn = new sh.keptn.Keptn()

node {

	stage('Cloning Git') {
        git 'git@github.com:geordin/keptn-templates.git'
      }

	stage('Initialize Keptn Dev') {

        // Initialize the Keptn Project - ensures the Keptn Project is created with the passed shipyard
        keptn.keptnInit project:"demo", service:"carts", stage:"dev", shipyard:'shipyard.yaml'

        // Upload all the files
        keptn.keptnAddResources('./carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')
    }

    stage('Initialize Keptn Staging') {

        // Initialize the Keptn Project - ensures the Keptn Project is created with the passed shipyard
        keptn.keptnInit project:"demo", service:"carts", stage:"staging"
        // Upload all the files
        keptn.keptnAddResources('./carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')
        keptn.keptnAddResources('./sli.yaml','dynatrace/sli.yaml')
        keptn.keptnAddResources('./slo.yaml','slo.yaml')
    }

    stage('Initialize Keptn Prod') {

        // Initialize the Keptn Project - ensures the Keptn Project is created with the passed shipyard
        keptn.keptnInit project:"demo", service:"carts", stage:"production"

        // Upload all the files
        keptn.keptnAddResources('./carts.tgz','helm/carts.tgz')
        keptn.keptnAddResources('./dynatrace.conf.yaml','dynatrace/dynatrace.conf.yaml')

    }

}
